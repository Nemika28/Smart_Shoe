//Ultrasonic sensor check
int trigPin = 9;
int echoPin = 10;
int led = 7;
void setup() {
Serial.begin(9600);
pinMode(led, OUTPUT);
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);

}

void loop() {
long duration, distance;
digitalWrite(trigPin,HIGH);
delayMicroseconds(1000);
digitalWrite(trigPin, LOW);
duration=pulseIn(echoPin, HIGH);
distance =(duration/2)/29.1;
Serial.print(distance);
Serial.println("CM");
delay(10);
if((distance<=10)){
digitalWrite(led, HIGH);
}
else if(distance>10){
digitalWrite(led, LOW);
}
}



// Arduino nano cconst int trigPin = 8;
const int echoPin = 7;
const int buzz = 5;
const int vib = 2;	
// defines variables
long duration;
float distance;
void setup() {
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
pinMode(buzz, OUTPUT);
pinMode(vib, OUTPUT);
Serial.begin(9600); // Starts the serial communication
}
void loop() {
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// calculating the distance
distance= duration*0.034/2.0;
// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);
if (distance < 70)
{
Serial.print(distance);
Serial.println("Object Alert");
digitalWrite(vib, HIGH);
digitalWrite(buzz,HIGH);
delay(100);
digitalWrite(buzz,LOW);
digitalWrite(vib, LOW);
for (int i= (distance-40); i>0; i--)
delay(10);
}
} 
